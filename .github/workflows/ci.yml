name: CI

on: [push, pull_request]

jobs:
  validate-commits:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    steps:
      # Checkout Repo
      - name: Checkout Repo
        uses: actions/checkout@v2
        
      # Vailate Commits
      # Commenting out until 'reference not found' issue is resolved
      #- name: Commitsar check
      #  uses: aevea/commitsar@v0.15.0
      #  env: 
      #    GIT_DEPTH: 0
      #    COMMITSAR_CONFIG_PATH: ./.github

  check:
    name: Test
    runs-on: ubuntu-latest
    steps:
      # Checkout Latest
      - name: Checkout Latest
        uses: actions/checkout@v2

      # Checkout Submodules
      - name: Checkout Submodules
        uses: jwsi/submodule-checkout@v1
        with:
          ssh-key: '${{ secrets.SUB_SSH_KEY }}'

      # Setup Java
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Make Gradle Wrapper Executable
      - name: Make gradlew executable
        run: chmod +x ./gradlew
          
      # Setup Cache
      - name: Setup Gradle Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      # Decode Google services configuration file
      - name: Decode google-services.json
        run: echo $FIREBASE_CONFIG > ./app/google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}

      # Check the code with Android linter + kotlinter
      - name: Run Android Linter + kotlinter
        run: ./gradlew check

      # Populate Secrets
      - name: Decode secrets.xml
        env:
          SECRETS: ${{ secrets.SECRETS }}
        run: echo $SECRETS > ./app/src/main/res/values/secrets.xml
  
      # Run unit tests
      - name: Run Unit Tests
        run: ./gradlew test

      # Assemble debug apk to send to firebase test lab
      - name: Assemble Debug APK
        run: ./gradlew assembleDebug

      # Assemble debug test apk to send to firebase test lab
      - name: Assemble Debug Test APK
        run: ./gradlew assembleDebugAndroidTest

      # Run instrumented tests on firebase test lab
      - name: Run tests on Firebase Test Lab
        uses: asadmansr/Firebase-Test-Lab-Action@v1.0
        with:
          arg-spec: '.github/tests.yml:android-pixel-4'
        env:
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
